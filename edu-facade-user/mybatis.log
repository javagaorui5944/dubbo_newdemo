[DEBUG][2017-04-26 22:23:46,029][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]Ignored because not a concrete top-level class: file [/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes/com/dao/UserDao.class]
[INFO][2017-04-26 22:23:46,817][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring-mybatis.xml]
[DEBUG][2017-04-26 22:23:46,821][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG][2017-04-26 22:23:46,823][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
[DEBUG][2017-04-26 22:23:46,853][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG][2017-04-26 22:23:46,860][org.springframework.beans.factory.xml.BeanDefinitionParserDelegate]Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
[DEBUG][2017-04-26 22:23:46,861][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [classpath:spring-mybatis.xml]
[DEBUG][2017-04-26 22:23:46,861][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Imported 3 bean definitions from URL location [classpath:spring-mybatis.xml]
[INFO][2017-04-26 22:23:46,861][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [Spring-dubbo-provider.xml]
[DEBUG][2017-04-26 22:23:46,864][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG][2017-04-26 22:23:46,866][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG][2017-04-26 22:23:46,888][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG][2017-04-26 22:23:46,924][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[INFO][2017-04-26 22:23:46,935][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][2017-04-26 22:23:46,978][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [classpath:Spring-dubbo-provider.xml]
[DEBUG][2017-04-26 22:23:46,979][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Imported 5 bean definitions from URL location [classpath:Spring-dubbo-provider.xml]
[DEBUG][2017-04-26 22:23:46,979][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 15 bean definitions from location pattern [spring.xml]
[DEBUG][2017-04-26 22:23:46,979][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2e559e7f: org.springframework.beans.factory.support.DefaultListableBeanFactory@546cb748: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,userService,hello-world,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.service.UserService]; root of factory hierarchy
[DEBUG][2017-04-26 22:23:47,015][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,015][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,034][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,038][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,074][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG][2017-04-26 22:23:47,074][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG][2017-04-26 22:23:47,075][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,114][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG][2017-04-26 22:23:47,114][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG][2017-04-26 22:23:47,119][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][2017-04-26 22:23:47,120][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][2017-04-26 22:23:47,120][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][2017-04-26 22:23:47,132][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes/com/dao]
[DEBUG][2017-04-26 22:23:47,133][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes/com/dao] for files matching pattern [/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes/com/dao/**/*.class]
[DEBUG][2017-04-26 22:23:47,135][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:com/dao/**/*.class] to resources [file [/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes/com/dao/UserDao.class]]
[DEBUG][2017-04-26 22:23:47,136][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: file [/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes/com/dao/UserDao.class]
[DEBUG][2017-04-26 22:23:47,141][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'userDao' and 'com.dao.UserDao' mapperInterface
[DEBUG][2017-04-26 22:23:47,142][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
[DEBUG][2017-04-26 22:23:47,142][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
[DEBUG][2017-04-26 22:23:47,143][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,153][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
[INFO][2017-04-26 22:23:47,153][org.springframework.beans.factory.config.PropertyPlaceholderConfigurer]Loading properties file from class path resource [config.properties]
[DEBUG][2017-04-26 22:23:47,161][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,161][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,161][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,161][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,162][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,162][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,162][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,162][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,162][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,162][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,167][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,167][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,168][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][2017-04-26 22:23:47,171][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@9427fe2]
[DEBUG][2017-04-26 22:23:47,173][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@49fb6367]
[DEBUG][2017-04-26 22:23:47,174][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@546cb748: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,userService,hello-world,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.service.UserService,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,userDao]; root of factory hierarchy
[DEBUG][2017-04-26 22:23:47,175][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,175][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,175][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,175][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][2017-04-26 22:23:47,175][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG][2017-04-26 22:23:47,175][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG][2017-04-26 22:23:47,181][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,184][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG][2017-04-26 22:23:47,185][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][2017-04-26 22:23:47,185][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][2017-04-26 22:23:47,185][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,187][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][2017-04-26 22:23:47,187][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
[DEBUG][2017-04-26 22:23:47,187][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dataSource'
[DEBUG][2017-04-26 22:23:47,187][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dataSource'
[DEBUG][2017-04-26 22:23:47,215][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dataSource' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,282][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dataSource'
[DEBUG][2017-04-26 22:23:47,283][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:47,283][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:47,303][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[DEBUG][2017-04-26 22:23:47,308][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,318][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dataSource'
[DEBUG][2017-04-26 22:23:47,319][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:47,320][org.mybatis.spring.SqlSessionFactoryBean]Property 'configLocation' not specified, using default MyBatis Configuration
[DEBUG][2017-04-26 22:23:47,514][org.mybatis.spring.SqlSessionFactoryBean]Parsed mapper file: 'class path resource [com/mapper/UserMapper.xml]'
[DEBUG][2017-04-26 22:23:47,515][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:47,516][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG][2017-04-26 22:23:47,516][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'userService'
[DEBUG][2017-04-26 22:23:47,516][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'userService'
[DEBUG][2017-04-26 22:23:47,524][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.service.impl.UserServiceImpl]: AutowiredMethodElement for public void com.service.impl.UserServiceImpl.setUserDao(com.dao.UserDao)
[DEBUG][2017-04-26 22:23:47,525][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'userService' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,525][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'userService': AutowiredMethodElement for public void com.service.impl.UserServiceImpl.setUserDao(com.dao.UserDao)
[DEBUG][2017-04-26 22:23:47,529][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'userDao'
[DEBUG][2017-04-26 22:23:47,529][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'userDao'
[DEBUG][2017-04-26 22:23:47,529][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'userDao' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,546][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:47,559][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'userDao'
[DEBUG][2017-04-26 22:23:47,559][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'userDao'
[DEBUG][2017-04-26 22:23:47,560][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'userDao'
[DEBUG][2017-04-26 22:23:47,563][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'userService' to bean named 'userDao'
[DEBUG][2017-04-26 22:23:47,563][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'userService'
[DEBUG][2017-04-26 22:23:47,564][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'hello-world'
[DEBUG][2017-04-26 22:23:47,564][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'hello-world'
[DEBUG][2017-04-26 22:23:47,568][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'hello-world' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,583][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'hello-world'
[DEBUG][2017-04-26 22:23:47,583][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][2017-04-26 22:23:47,583][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][2017-04-26 22:23:47,586][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,592][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][2017-04-26 22:23:47,592][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG][2017-04-26 22:23:47,592][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG][2017-04-26 22:23:47,596][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,612][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG][2017-04-26 22:23:47,613][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.service.UserService'
[DEBUG][2017-04-26 22:23:47,613][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.service.UserService'
[DEBUG][2017-04-26 22:23:47,666][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:47,846][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:47,873][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.service.UserService' to allow for resolving potential circular references
[DEBUG][2017-04-26 22:23:47,918][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'userService'
[DEBUG][2017-04-26 22:23:47,923][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.service.UserService'
[DEBUG][2017-04-26 22:23:47,924][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'hello-world'
[DEBUG][2017-04-26 22:23:47,925][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][2017-04-26 22:23:47,929][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG][2017-04-26 22:23:47,930][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.service.UserService'
[DEBUG][2017-04-26 22:23:47,930][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][2017-04-26 22:23:47,930][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][2017-04-26 22:23:47,930][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'userDao'
[DEBUG][2017-04-26 22:23:47,931][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][2017-04-26 22:23:48,013][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@39adf55]
[DEBUG][2017-04-26 22:23:48,014][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG][2017-04-26 22:23:48,018][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:48,018][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.service.UserService'
[INFO][2017-04-26 22:23:48,019][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.service.UserService, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,399][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,414][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,426][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:23:48,440][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.service.UserService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:23:48,441][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.service.UserService to url dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:23:48,441][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.service.UserService url dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333 to registry registry://112.74.18.231:2181/com.alibaba.dubbo.registry.RegistryService?application=hello-world&dubbo=2.5.3&pid=6669&registry=zookeeper&timestamp=1493216628030, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,443][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,455][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,479][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,495][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,509][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,551][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:23:48,598][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20886, export /192.168.191.3:20886, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,605][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,640][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 112.74.18.231:2181.
[INFO][2017-04-26 22:23:48,640][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.9-1757313, built on 08/23/2016 06:50 GMT
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:host.name=192.168.191.3
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_79
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/htmlconverter.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/javafx-doclet.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/tools.jar:/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/test-classes:/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-service-user/target/classes:/Users/gaorui/.m2/repository/org/springframework/spring-context/4.2.4.RELEASE/spring-context-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/org/springframework/spring-aop/4.2.4.RELEASE/spring-aop-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/gaorui/.m2/repository/org/springframework/spring-beans/4.2.4.RELEASE/spring-beans-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/org/springframework/spring-core/4.2.4.RELEASE/spring-core-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/org/springframework/spring-expression/4.2.4.RELEASE/spring-expression-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/org/springframework/spring-webmvc/4.2.4.RELEASE/spring-webmvc-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/org/springframework/spring-web/4.2.4.RELEASE/spring-web-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/gaorui/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/gaorui/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/gaorui/.m2/repository/org/springframework/spring-test/4.2.4.RELEASE/spring-test-4.2.4.RELEASE.jar:/Users/gaorui/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/gaorui/.m2/repository/org/mybatis/mybatis/3.3.0/mybatis-3.3.0.jar:/Users/gaorui/.m2/repository/org/mybatis/mybatis-spring/1.2.3/mybatis-spring-1.2.3.jar:/Users/gaorui/.m2/repository/mysql/mysql-connector-java/5.1.36/mysql-connector-java-5.1.36.jar:/Users/gaorui/.m2/repository/com/alibaba/druid/1.0.15/druid-1.0.15.jar:/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-facade-user/target/classes:/Users/gaorui/.m2/repository/com/alibaba/dubbo/2.5.3/dubbo-2.5.3.jar:/Users/gaorui/.m2/repository/org/springframework/spring/2.5.6.SEC03/spring-2.5.6.SEC03.jar:/Users/gaorui/.m2/repository/org/javassist/javassist/3.15.0-GA/javassist-3.15.0-GA.jar:/Users/gaorui/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/Users/gaorui/.m2/repository/org/apache/zookeeper/zookeeper/3.4.9/zookeeper-3.4.9.jar:/Users/gaorui/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/gaorui/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar:/Users/gaorui/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/gaorui/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/Users/gaorui/.m2/repository/io/netty/netty/3.10.5.Final/netty-3.10.5.Final.jar:/Users/gaorui/.m2/repository/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/Users/gaorui/.m2/repository/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/Users/gaorui/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/gaorui/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/kg/mpp3vpgs35v008dl9w7bh9g80000gn/T/
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO][2017-04-26 22:23:48,649][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO][2017-04-26 22:23:48,650][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO][2017-04-26 22:23:48,650][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.11.3
[INFO][2017-04-26 22:23:48,650][org.apache.zookeeper.ZooKeeper]Client environment:user.name=gaorui
[INFO][2017-04-26 22:23:48,650][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/gaorui
[INFO][2017-04-26 22:23:48,650][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/gaorui/IdeaProjects/dubbo_newdemo/edu-facade-user
[INFO][2017-04-26 22:23:48,651][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=112.74.18.231:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@3826ea10
[DEBUG][2017-04-26 22:23:48,653][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG][2017-04-26 22:23:48,663][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[DEBUG][2017-04-26 22:23:48,663][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO][2017-04-26 22:23:48,668][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 112.74.18.231/112.74.18.231:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO][2017-04-26 22:23:48,711][org.apache.zookeeper.ClientCnxn]Socket connection established to 112.74.18.231/112.74.18.231:2181, initiating session
[DEBUG][2017-04-26 22:23:48,718][org.apache.zookeeper.ClientCnxn]Session establishment request sent on 112.74.18.231/112.74.18.231:2181
[INFO][2017-04-26 22:23:48,779][org.apache.zookeeper.ClientCnxn]Session establishment complete on server 112.74.18.231/112.74.18.231:2181, sessionid = 0x15b65c5d6ae0014, negotiated timeout = 30000
[DEBUG][2017-04-26 22:23:48,781][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO][2017-04-26 22:23:48,781][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG][2017-04-26 22:23:48,781][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG][2017-04-26 22:23:48,781][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO][2017-04-26 22:23:48,782][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:48,879][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,220,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo 
[DEBUG][2017-04-26 22:23:48,928][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,221,0  request:: '/dubbo/com.service.UserService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.service.UserService 
[DEBUG][2017-04-26 22:23:48,969][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,222,0  request:: '/dubbo/com.service.UserService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.service.UserService/providers 
[DEBUG][2017-04-26 22:23:49,013][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,223,0  request:: '/dubbo/com.service.UserService/providers/dubbo%253A%252F%252F192.168.191.3%253A20886%252Fcom.service.UserService%253Fanyhost%253Dtrue%2526application%253Dhello-world%2526dubbo%253D2.5.3%2526interface%253Dcom.service.UserService%2526methods%253DisLogin%252CgetUserById%2526pid%253D6669%2526side%253Dprovider%2526timestamp%253D1493216628333,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.service.UserService/providers/dubbo%253A%252F%252F192.168.191.3%253A20886%252Fcom.service.UserService%253Fanyhost%253Dtrue%2526application%253Dhello-world%2526dubbo%253D2.5.3%2526interface%253Dcom.service.UserService%2526methods%253DisLogin%252CgetUserById%2526pid%253D6669%2526side%253Dprovider%2526timestamp%253D1493216628333 
[INFO][2017-04-26 22:23:49,014][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&category=configurators&check=false&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:49,061][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,224,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][2017-04-26 22:23:49,115][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,225,-110  request:: '/dubbo/com.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][2017-04-26 22:23:49,160][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,226,0  request:: '/dubbo/com.service.UserService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.service.UserService/configurators 
[DEBUG][2017-04-26 22:23:49,219][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,226,0  request:: '/dubbo/com.service.UserService/configurators,T  response:: s{226,226,1493216629082,1493216629082,0,0,0,0,0,0,226} 
[DEBUG][2017-04-26 22:23:49,265][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,226,0  request:: '/dubbo/com.service.UserService/configurators,T  response:: v{} 
[INFO][2017-04-26 22:23:49,265][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&category=configurators&check=false&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, urls: [empty://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&category=configurators&check=false&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333], dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:49,276][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:49,290][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:23:49,304][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG][2017-04-26 22:23:49,304][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG][2017-04-26 22:23:49,305][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG][2017-04-26 22:23:49,306][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG][2017-04-26 22:23:49,307][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG][2017-04-26 22:23:49,307][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.service.UserService'
[DEBUG][2017-04-26 22:23:59,271][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x15b65c5d6ae0014 after 40ms
[DEBUG][2017-04-26 22:24:09,276][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x15b65c5d6ae0014 after 39ms
[DEBUG][2017-04-26 22:24:19,323][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x15b65c5d6ae0014 after 80ms
[DEBUG][2017-04-26 22:24:29,286][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x15b65c5d6ae0014 after 39ms
[DEBUG][2017-04-26 22:24:33,161][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:24:33,180][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][2017-04-26 22:24:33,193][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d273e13] was not registered for synchronization because synchronization is not active
[DEBUG][2017-04-26 22:24:33,222][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
[INFO][2017-04-26 22:24:33,492][com.alibaba.druid.pool.DruidDataSource]{dataSource-1} inited
[DEBUG][2017-04-26 22:24:34,198][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@58ac8605] will not be managed by Spring
[DEBUG][2017-04-26 22:24:34,218][com.dao.UserDao.getUserById]==>  Preparing: select * from user where id=?; 
[DEBUG][2017-04-26 22:24:34,266][com.dao.UserDao.getUserById]==> Parameters: 1(Integer)
[DEBUG][2017-04-26 22:24:34,331][com.dao.UserDao.getUserById]<==      Total: 1
[DEBUG][2017-04-26 22:24:34,331][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d273e13]
[DEBUG][2017-04-26 22:24:34,331][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
[WARN][2017-04-26 22:24:34,446][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.191.3:20886. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:34,447][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /192.168.191.3:60208,url:dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:24:39,287][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x15b65c5d6ae0014 after 40ms
[DEBUG][2017-04-26 22:24:49,294][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x15b65c5d6ae0014 after 40ms
[INFO][2017-04-26 22:24:56,518][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,519][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://112.74.18.231:2181/com.alibaba.dubbo.registry.RegistryService?application=hello-world&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=6669&timestamp=1493216628030], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,519][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://112.74.18.231:2181/com.alibaba.dubbo.registry.RegistryService?application=hello-world&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=6669&timestamp=1493216628030, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,520][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:24:56,566][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,243,0  request:: '/dubbo/com.service.UserService/providers/dubbo%253A%252F%252F192.168.191.3%253A20886%252Fcom.service.UserService%253Fanyhost%253Dtrue%2526application%253Dhello-world%2526dubbo%253D2.5.3%2526interface%253Dcom.service.UserService%2526methods%253DisLogin%252CgetUserById%2526pid%253D6669%2526side%253Dprovider%2526timestamp%253D1493216628333,-1  response:: null
[INFO][2017-04-26 22:24:56,567][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,567][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&category=configurators&check=false&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,567][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&category=configurators&check=false&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][2017-04-26 22:24:56,567][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO][2017-04-26 22:24:56,568][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG][2017-04-26 22:24:56,568][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 112.74.18.231:2181
[DEBUG][2017-04-26 22:24:56,568][org.apache.zookeeper.ZooKeeper]Closing session: 0x15b65c5d6ae0014
[DEBUG][2017-04-26 22:24:56,569][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x15b65c5d6ae0014
[DEBUG][2017-04-26 22:24:56,611][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x15b65c5d6ae0014, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,244,0  request:: null response:: null
[DEBUG][2017-04-26 22:24:56,611][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x15b65c5d6ae0014
[INFO][2017-04-26 22:24:56,611][org.apache.zookeeper.ZooKeeper]Session: 0x15b65c5d6ae0014 closed
[DEBUG][2017-04-26 22:24:56,612][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO][2017-04-26 22:24:56,612][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.191.3:20886, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,614][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20886, export /192.168.191.3:20886, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,616][org.apache.zookeeper.ClientCnxn]EventThread shut down for session: 0x15b65c5d6ae0014
[INFO][2017-04-26 22:24:56,618][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.191.3:20886/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO][2017-04-26 22:24:56,618][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.service.UserService?anyhost=true&application=hello-world&dubbo=2.5.3&interface=com.service.UserService&methods=isLogin,getUserById&pid=6669&side=provider&timestamp=1493216628333, dubbo version: 2.5.3, current host: 127.0.0.1
